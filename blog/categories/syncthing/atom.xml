<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Syncthing | Network-oriented programming]]></title>
  <link href="http://networkop.github.io/blog/categories/syncthing/atom.xml" rel="self"/>
  <link href="http://networkop.github.io/"/>
  <updated>2017-11-26T10:48:55+00:00</updated>
  <id>http://networkop.github.io/</id>
  <author>
    <name><![CDATA[Michael Kashin]]></name>
    <email><![CDATA[mmkashin@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Windows-Linux File Synchronisation]]></title>
    <link href="http://networkop.github.io/blog/2015/06/22/dev-file-sync/"/>
    <updated>2015-06-22T00:00:00+01:00</updated>
    <id>http://networkop.github.io/blog/2015/06/22/dev-file-sync</id>
    <content type="html"><![CDATA[<p>My development environment usually consists of a host machine running Windows and a development Linux &ldquo;headless&rdquo; virtual machine. I create and edit
files in a <a href="https://notepad-plus-plus.org/">Notepad++</a> text editor and then transfer them over to the Linux VM. Until recently I&rsquo;ve been using a hypervisor-enabled &ldquo;shared&rdquo; folder. However, Windows file system emulators in Linux do not support symbolic links
and therefore breaks a lot of applications that rely on them. This prompted me to start looking for a new way to sync my files. That&rsquo;s how I came across this new amazing
file syncing app called <a href="https://syncthing.net/">Syncthing</a>. Why is it amazing?</p>

<ul>
<li>It uses peer-to-peer architecture. User traffic is not uploaded to a centralised server and is transferred directly between peers.</li>
<li>It is open-source. It doesn&rsquo;t use any proprietary syncing protocols like BTSync.</li>
<li>As the result of open-source nature it has big community support with clients, wrappers and extension available for any major platform.</li>
<li>It is secure. All transfers are TLS-encrypted.</li>
<li>It&rsquo;s simple to use. Windows version installs like any other Windows app, Linux version, like any other Linux app, will take a little tinkering.</li>
<li>It&rsquo;s written in Golang, an extremely popular language amongst professional programmers and surely these guys can&rsquo;t be mistaken.</li>
</ul>


<!--more-->


<h2>Windows installation</h2>

<p>Windows installation is extremely easy. I use a package called <a href="https://github.com/canton7/SyncTrayzor/releases">SyncTrayzor</a> which contains the application itself, serves as a tray utility wrapper and also implements &ldquo;inotify&rdquo; which allows for file on-change synchronisation (BGP ip next-hop tracking anyone?)</p>

<h2>Ubuntu installation</h2>

<p>Ubuntu package installation is an easy 4-step process:</p>

<pre><code class="bash 1.Syncthing Ubuntu installation http://apt.syncthing.net/ Instructions"># Add the release PGP keys:
$ curl -s https://syncthing.net/release-key.txt | sudo apt-key add -

# Add the "release" channel to your APT sources:
$ echo deb http://apt.syncthing.net/ Syncthing release | sudo tee /etc/apt/sources.list.d/syncthing-release.list

# Update and install syncthing:
$ sudo apt-get update
$ sudo apt-get install syncthing
</code></pre>

<pre><code class="bash 2.Inotify installation https://github.com/syncthing/syncthing-inotify/releases Release"># Choose the latest release for your platform
$ wget https://github.com/syncthing/syncthing-inotify/releases/download/v0.6.5/syncthing-inotify-linux-amd64-v0.6.5.tar.gz

# Unpack and copy inotify to the same directory as the main app
$ tar xvf syncthing-inotify-linux-amd64-v0.6.5.tar.gz
$ which syncthing
/usr/bin/syncthing
$ mv syncthing-inotify /usr/bin/
</code></pre>

<pre><code class="bash 3. Configure upstart script to control Syncthing https://egustafson.github.io/syncthing-ubuntu.html Upstart setup"># Create a file for main service
$ echo "start on starting network-services
stop on stopping network-services
env STNORESTART=yes
respawn
env HOME=/root
exec /usr/bin/syncthing" &gt;&gt; /etc/init/syncthing.conf

# Do the same for inotify
$ echo "start on starting syncthing
stop on stopping syncthing
env STNORESTART=yes
respawn
env HOME=/root
exec /usr/bin/syncthing-inotify" &gt;&gt; /etc/init/syncthing-inotify.conf

# start both services 
$ service syncthing start &amp;&amp; service syncthing-inotify start
</code></pre>

<pre><code class="bash 4. Update Syncthing configuration file "># Update the default Sync directory to match your dev environment
# using the correct device IDs
$ head -n 10 ~/.config/syncthing/config.xml
&lt;configuration version="10"&gt;
    &lt;folder id="ansible-blog" path="/root/tdd_ansible" ro="false" rescanIntervalS="60" ignorePerms="false" autoNormalize="false"&gt;
        &lt;device id="MY-DEVICE-ID"&gt;&lt;/device&gt;
        &lt;device id="PEER-DEVICE-ID"&gt;&lt;/device&gt;
        &lt;versioning&gt;&lt;/versioning&gt;
        &lt;copiers&gt;0&lt;/copiers&gt;
        &lt;pullers&gt;0&lt;/pullers&gt;
        &lt;hashers&gt;0&lt;/hashers&gt;
        &lt;order&gt;random&lt;/order&gt;
    &lt;/folder&gt;

# Add peer device's ID to the same file
$ cat ~/.config/syncthing/config.xml
...
    &lt;device id="PEER-DEVICE-ID" name="NETOP-DESKTOP" compression="metadata" introducer="false"&gt;
        &lt;address&gt;dynamic&lt;/address&gt;
    &lt;/device&gt;
...

# restart both syncthing services
$ service syncthing restart &amp;&amp; service syncthing-inotify restart
</code></pre>

<p>Finally, Windows service can be configured similarly via Syncthing Tray. End result is that files are replicated between the two folders with a delay of just a few seconds
``` bash Verification
$ touch /root/tdd_ansible/testfile
$ tail -n 3 /var/log/upstart/syncthing*
==> /var/log/upstart/syncthing-inotify.log &lt;==
[OK] 01:45:04 Watching ansible-blog: /root/tdd_ansible
[OK] 01:45:04 Syncthing is indexing change in ansible-blog: [.stfolder]
[OK] 01:46:16 Syncthing is indexing change in ansible-blog: [testfile]</p>

<p>==> /var/log/upstart/syncthing.log &lt;==
[TLARX] 01:41:25 INFO: Established secure connection to DEVICE-ID at 192.168.X.Y:22000-192.168.X.Z:53007
[TLARX] 01:41:25 INFO: Device DEVICE-ID client is &ldquo;syncthing v0.11.10&rdquo;
[TLARX] 01:41:25 INFO: Device DEVICE-ID name is &ldquo;NETOP-DESKTOP&rdquo;
```</p>

<hr />

<p>How can you not love open-source after that?</p>
]]></content>
  </entry>
  
</feed>
