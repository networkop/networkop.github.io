<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on networkop</title>
    <link>https://networkop.co.uk/tags/docker/</link>
    <description>Recent content in Docker on networkop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Michael Kashin 2018</copyright>
    <lastBuildDate>Thu, 21 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://networkop.co.uk/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Serverless SDN - Network Engineering Analysis of Appswitch</title>
      <link>https://networkop.co.uk/post/2018-05-29-appswitch-sdn/</link>
      <pubDate>Thu, 21 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://networkop.co.uk/post/2018-05-29-appswitch-sdn/</guid>
      <description>Virtual networking has been one of the hottest areas of research and development in recent years. Kubernetes alone has, at the time of writing, 20 different networking plugins, some of which can be combined to build even more plugins. However, if we dig a bit deeper, most of these plugins and solutions are built out of two very simple constructs:
 a virtual switch - anything from a linux bridge through VPP and IOVisor to OVS ACL/NAT - most commonly implemented as iptables, with anything from netfilter to eBPF under the hood   Note1: for the purpose of this article I won&amp;rsquo;t consider service meshes as a network solution, although it clearly is one, simply because it operates higher than TCP/IP and ultimately still requires network plumbing to be in place</description>
    </item>
    
  </channel>
</rss>