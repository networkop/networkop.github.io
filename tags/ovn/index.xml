<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OVN on networkop</title>
    <link>https://networkop.co.uk/tags/ovn/</link>
    <description>Recent content in OVN on networkop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Michael Kashin 2018</copyright>
    <lastBuildDate>Sat, 10 Dec 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://networkop.co.uk/tags/ovn/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>OpenStack SDN With OVN (Part 2) - Network Engineering Analysis</title>
      <link>https://networkop.co.uk/blog/2016/12/10/ovn-part2/</link>
      <pubDate>Sat, 10 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://networkop.co.uk/blog/2016/12/10/ovn-part2/</guid>
      <description>Table of Contents  OpenStack - virtual network topology OVN Northbound DB - logical network topology OVN Southbound DB - logical flows  L2 datapath L3 datapath  OVN Controller - OpenFlow flows Physical network - GENEVE overlay Conclusion   OpenStack - virtual network topology In the previous post we have installed OpenStack and created a simple virtual topology as shown below. In OpenStack&amp;rsquo;s data model this topology consists of the following elements:</description>
    </item>
    
    <item>
      <title>OpenStack SDN With OVN (Part 1) - Build and Install</title>
      <link>https://networkop.co.uk/blog/2016/11/27/ovn-part1/</link>
      <pubDate>Sun, 27 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://networkop.co.uk/blog/2016/11/27/ovn-part1/</guid>
      <description>Vanilla OpenStack networking has many functional, performance and scaling limitations. Projects like L2 population, local ARP responder, L2 Gateway and DVR were conceived to address those issues. However good a job these projects do, they still remain a collection of separate projects, each with its own limitations, configuration options and sets of dependencies. That led to an effort outside of OpenStack to develop a special-purpose OVS-only SDN controller that would address those issues in a centralised and consistent manner.</description>
    </item>
    
  </channel>
</rss>